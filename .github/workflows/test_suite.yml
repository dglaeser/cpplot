# SPDX-FileCopyrightText: 2024 Dennis Gl√§ser <dennis.a.glaeser@gmail.com>
# SPDX-License-Identifier: MIT

name: test-suite

on:
  push:
    branches: [main]
  pull_request:
    branches:
    - main
    - 'releases/**'
  schedule:
    - cron: '30 22 * * 0,3'
  workflow_dispatch:
  workflow_call:

jobs:
  sanity-checks:
    runs-on: ubuntu-22.04
    steps:
      - name: install-dependencies
        run: |
          sudo apt install cmake python3 python3-dev python3-pip
          python3 -m pip install matplotlib

      - name: checkout-repository
        uses: actions/checkout@v2

      - name: extract-readme-minimal-application
        run: |
          echo "with open('main.cpp', 'w') as main_file:" >> _extract.py
          echo "    main_file.write(open('README.md').read().split('\`\`\`cpp')[1].split('\`\`\`')[0])" >> _extract.py
          python3 _extract.py
          echo "Wrote the following test main file"
          cat main.cpp

      - name: test-readme-application  # also tests support for cmake's FetchContent
        run: |
          mkdir readme_test && cd readme_test && mv ../main.cpp .
          echo "cmake_minimum_required(VERSION 3.18)" >> CMakeLists.txt
          echo "project(cpplot_test)" >> CMakeLists.txt
          echo "set(CPPLOT_INCLUDE_EXAMPLES OFF)" >> CMakeLists.txt
          echo "set(CPPLOT_INCLUDE_TESTS OFF)" >> CMakeLists.txt
          echo "include(FetchContent)" >> CMakeLists.txt
          echo "FetchContent_Declare(" >> CMakeLists.txt
          echo "    cpplot" >> CMakeLists.txt
          echo "    GIT_REPOSITORY https://github.com/dglaeser/cpplot.git" >> CMakeLists.txt
          echo "    GIT_TAG ${{ github.head_ref }}" >> CMakeLists.txt
          echo ")" >> CMakeLists.txt
          echo "FetchContent_MakeAvailable(cpplot)" >> CMakeLists.txt
          echo "add_executable(main main.cpp)" >> CMakeLists.txt
          echo "target_link_libraries(main PRIVATE cpplot::cpplot)" >> CMakeLists.txt
          cmake -B build && cd build && make && ./main

  test:
    needs: sanity-checks
    runs-on: ubuntu-22.04
    steps:
      - name: install-dependencies
        run: |
          sudo apt install cmake python3 python3-dev python3-pip
          python3 -m pip install matplotlib

      - name: checkout-repository
        uses: actions/checkout@v2

      - name: build-tests
        run: |
          cmake -B build
          cmake --build build

      - name: run-tests
        run: cd build && ctest --output-on-failure

  test-as-submodule:
    needs: sanity-checks
    runs-on: ubuntu-22.04
    steps:
      - name: install-dependencies
        run: |
          sudo apt install cmake python3 python3-dev python3-pip
          python3 -m pip install matplotlib

      - name: checkout-repository
        uses: actions/checkout@v2

      - name: move-to-sub-directory
        run: mkdir cpplot && mv * cpplot/ 2> /dev/null || true

      - name: move-out-test-directory
        run: mv cpplot/test .

      - name: generate-cmake-lists
        run: |
          echo "cmake_minimum_required(VERSION 3.18)" > CMakeLists.txt
          echo "project(cpplot_submodule_test)" >> CMakeLists.txt
          echo "set(CPPLOT_INCLUDE_TESTS OFF)" >> CMakeLists.txt
          echo "set(CPPLOT_INCLUDE_EXAMPLES OFF)" >> CMakeLists.txt
          echo "add_subdirectory(cpplot)" >> CMakeLists.txt
          echo "enable_testing()" >> CMakeLists.txt
          echo "add_subdirectory(test)" >> CMakeLists.txt

      - name: build-tests
        run: |
          cmake -B build
          cmake --build build

      - name: run-tests
        run: cd build && ctest --output-on-failure

  test-as-installed-package:
    needs: sanity-checks
    runs-on: ubuntu-22.04
    steps:
      - name: install-dependencies
        run: |
          sudo apt install cmake python3 python3-dev python3-pip
          python3 -m pip install matplotlib

      - name: checkout-repository
        uses: actions/checkout@v2

      - name: install-library
        run: |
          cmake -DCPPLOT_INCLUDE_TESTS=OFF -DCPPLOT_INCLUDE_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=$(pwd)/_install -B build
          cmake --build build
          cmake --install build

      - name: generate-test-project
        run: |
          mkdir installation_test && cd installation_test && mv ../test .
          echo "cmake_minimum_required(VERSION 3.18)" > CMakeLists.txt
          echo "project(cpplot_installation_test)" >> CMakeLists.txt
          echo "find_package(cpplot REQUIRED)" >> CMakeLists.txt
          echo "enable_testing()" >> CMakeLists.txt
          echo "add_subdirectory(test)" >> CMakeLists.txt

      - name: build-and-run-tests
        run: |
          cd installation_test
          cmake -Dcpplot_ROOT=../_install -B build
          cmake --build build
          cd build && ctest --output-on-failure
